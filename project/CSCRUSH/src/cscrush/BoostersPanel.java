/*
 * This class is implemented to showw boosters of the game
 */
package cscrush;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author tendoushuu
 */
public class BoostersPanel extends javax.swing.JPanel {

    private Image robin;
    private Image halil;
    private Image eray;
    private Image ozcan;
    private Image william;
    private int pressedX,pressedY,pressedX1,pressedY1;
    /**
     * Creates new form BoostersPanel
     */
    public BoostersPanel() {
        initComponents();
        try {
            robin = ImageIO.read(new File("src/img/robin.jpg")).getScaledInstance(50, 50, Image.SCALE_DEFAULT);
            halil = ImageIO.read(new File("src/img/halil.jpg")).getScaledInstance(50, 50, Image.SCALE_DEFAULT);
            eray = ImageIO.read(new File("src/img/eray.jpg")).getScaledInstance(50, 50, Image.SCALE_DEFAULT);
            ozcan = ImageIO.read(new File("src/img/ozcan.jpg")).getScaledInstance(50, 50, Image.SCALE_DEFAULT);
            william = ImageIO.read(new File("src/img/william.jpg")).getScaledInstance(50, 50, Image.SCALE_DEFAULT);
             
        } catch (IOException ex) {
            Logger.getLogger(BoostersPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
/*
 * This method is implemented to showthe image of boosters
 * @param Graphics g  
 */
        @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        g.drawImage(eray,0,0,null);
        g.drawImage(robin,0,50,null);
        g.drawImage(halil,0,100,null);
        g.drawImage(ozcan,0,150,null);
        g.drawImage(william,0,200,null);
        
    }
/*
 * This method is implemented to get mouse clicks
 * @param java.awt.event.MouseEvent evt
 */
    private void formMouseClicked(java.awt.event.MouseEvent evt) {                                  

        pressedX = evt.getX();
        pressedY = evt.getY();
        pressedX1 = evt.getX();
        if (pressedX<= halil.getWidth(this) && pressedY<= halil.getHeight(this)) {
            GUIManager.manager.powerupaltay();
        }
        if (pressedX<= eray.getWidth(this) && pressedY<= eray.getHeight(this)) {
            GUIManager.manager.poweruperay(pressedX,pressedY,pressedX1,pressedY1);
        }
        if (pressedX<= robin.getWidth(this) && pressedY<= robin.getHeight(this)) {
            GUIManager.manager.poweruprobin(pressedX,pressedY);
        }
        if (pressedX<= ozcan.getWidth(this) && pressedY<= ozcan.getHeight(this)) {
            GUIManager.manager.powerupozcan(pressedX,pressedY);
        }
        if (pressedX<= william.getWidth(this) && pressedY<= william.getHeight(this)) {
            GUIManager.manager.powerupwilliam(pressedX,pressedY);
        }
 
       
    } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
