/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cscrush;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author tendoushuu
 */
public class GameTable extends javax.swing.JPanel {

    private BookCandy[][] tableObjects;
    private int pressedX, pressedY;
    /**
     * Creates new form GameTable
     */
    public GameTable() {
        initComponents();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        for (int i = 0; i < 10; i++)
        for (int j = 0; j < 10; j++)
        {  
            g.drawImage(tableObjects[i][j].getImage().getScaledInstance(50, 50, Image.SCALE_DEFAULT),i*50,j*50,null);
        }
        
    }
    
    public void setTableObjects(BookCandy[][] tableObjects)
    {
        this.tableObjects = tableObjects;
        repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(500, 500));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        pressedX = evt.getX();
        pressedY = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        int x,y;
        x = evt.getX();
        y = evt.getY();
        
        if (x > pressedX && y > pressedY && x - pressedX > y - pressedY)
        {
            //swiping right
            GUIManager.manager.swapBooks(pressedX/50, pressedY/50, pressedX/50 + 1, pressedY/50);
        }
        else if (x > pressedX && y > pressedY && x - pressedX < y - pressedY)
        {
            //swiping down
            GUIManager.manager.swapBooks(pressedX/50, pressedY/50, pressedX/50, pressedY/50 + 1);
        }
        else if (x < pressedX && y > pressedY && pressedX - x > y - pressedY)
        {
            //swiping left
            GUIManager.manager.swapBooks(pressedX/50, pressedY/50, pressedX/50 - 1, pressedY/50);
        }
        else if (x < pressedX && y > pressedY && pressedX - x < y - pressedY)
        {
            //swiping down
            GUIManager.manager.swapBooks(pressedX/50, pressedY/50, pressedX/50, pressedY/50 + 1);
        }        
        else if (x > pressedX && y < pressedY && x - pressedX > pressedY - y)
        {
            //swiping right
            GUIManager.manager.swapBooks(pressedX/50, pressedY/50, pressedX/50 + 1, pressedY/50);
        }
        else if (x > pressedX && y < pressedY && x - pressedX < pressedY - y)
        {
            //swiping up
            GUIManager.manager.swapBooks(pressedX/50, pressedY/50, pressedX/50, pressedY/50 - 1);
        }       
        else if (x < pressedX && y < pressedY && pressedX - x > pressedY - y)
        {
            //swiping left
            GUIManager.manager.swapBooks(pressedX/50, pressedY/50, pressedX/50 - 1, pressedY/50);
        }        
        else if (x < pressedX && y < pressedY && pressedX - x < pressedY - y)
        {
            //swiping up
            GUIManager.manager.swapBooks(pressedX/50, pressedY/50, pressedX/50, pressedY/50 - 1);
        }
    }//GEN-LAST:event_formMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
